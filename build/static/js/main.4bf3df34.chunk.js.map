{"version":3,"sources":["redux/user/user-selector.js","util/firebase.js","components/layout/account-section/account-section.component.jsx","components/layout/header/header.component.jsx","util/utils.js","components/pages/home/home.component.jsx","data/categories.js","components/category-item/category-item.component.jsx","components/categories-stripe/categories-stripe.component.jsx","assets/txt/about.MD.js","components/info/about/about.component.jsx","components/common/custom-button/custom-button.component.jsx","util/objectUtils.js","components/common/form-input/form-input.component.jsx","util/validators.js","components/common/text-area/text-area.component.jsx","components/info/contact/contact.component.jsx","components/pages/info/info.component.jsx","components/layout/footer/footer.component.jsx","redux/user/user-types.js","components/account/login/login.component.jsx","components/common/password-confirm/password-confirm-input.component.jsx","components/account/register/register.component.jsx","components/account/account-details/account-details.component.jsx","components/pages/account/account.component.jsx","components/App.js","redux/user/user-actions.js","serviceWorker.js","redux/user/user-reducer.js","redux/rootReducer.js","redux/store.js","index.js","assets/view.png","assets/hide.png"],"names":["currentUserSelector","createSelector","state","userNs","user","currentUser","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","createUserProfileDocument","a","ref","doc","uid","get","exists","displayName","email","createAt","Date","set","console","log","message","checkUserExistsByMail","collection","where","snapshot","size","updateUserDetails","userDetails","id","mapStateToProps","createStructuredSelector","withRouter","connect","history","signOut","navigateToAccount","push","className","onClick","appendLine","text","textToAppend","setTitle","toAppend","document","title","Home","useEffect","data","code","imageUrl","CategoryItem","category","itemSize","style","width","src","alt","calculatePageSize","Math","round","window","innerWidth","CategoriesStripe","props","updateDimensions","setState","pageSize","increaseStartIndex","prevState","startIndex","decreaseStartIndex","addEventListener","this","removeEventListener","endIndex","transform","transition","categories","map","key","ITEM_SIZE","length","Component","About","source","aboutContent","CustomButton","children","isSignInWithGoogle","inverted","otherProps","objectNotEmpty","object","result","Object","keys","forEach","eitherStringIsEmpty","strings","isEmpty","string","stringEmpty","INPUT_TYPES","FormInput","showPassword","passwordHidden","hidePassword","handleChange","event","target","name","value","isValid","validate","required","label","type","internalValidationMessage","test","prevProps","forceValidate","validationMessage","inputType","inputClassName","onChange","autoComplete","hideIcon","height","viewIcon","TextAreaInput","Contact","setField","sendEmail","preventDefault","options","method","headers","body","JSON","stringify","to","from_email","html_message","fetch","onSubmit","rows","cols","Info","match","exact","path","component","Footer","year","getFullYear","Login","invalidValues","handleSubmit","password","signInWithEmailAndPassword","includes","alert","PasswordConfirm","passwordAndConfPassword","isConfPassword","confPassword","Register","emailValidationMessage","createUserWithEmailAndPassword","userData","AccountDetails","presentationDate","seconds","userCreationDate","dateFormat","render","App","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","setCurrentUser","removeCurrentUser","AccountManagement","dispatch","types","payload","Boolean","location","hostname","INITIAL_STATE","reducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","persistStore","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.4bf3df34.chunk.js","sourcesContent":["import {createSelector} from \"reselect\";\r\n\r\nconst userSelector = state => state.userNs;\r\n\r\nexport const currentUserSelector = createSelector(\r\n    [userSelector],\r\n    user => user.currentUser\r\n);\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyAmzVBeFQv4rkLEEjtvVly1tHg1mig5zdo\",\r\n    authDomain: \"play-now-1323c.firebaseapp.com\",\r\n    databaseURL: \"https://play-now-1323c.firebaseio.com\",\r\n    projectId: \"play-now-1323c\",\r\n    storageBucket: \"play-now-1323c.appspot.com\",\r\n    messagingSenderId: \"142862999503\",\r\n    appId: \"1:142862999503:web:6ff63db389ac53ce957cba\",\r\n    measurementId: \"G-8ZLCJDEM9X\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({prompt: \"select_account\"});\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport async function createUserProfileDocument(user) {\r\n    const ref = firestore\r\n        .doc(`users/${user.uid}`);\r\n    const snapshot = await ref.get();\r\n    if(!snapshot.exists) {\r\n        const {displayName, email} = user;\r\n        const createAt = new Date();\r\n        try {\r\n            await ref.set({\r\n                displayName,\r\n                email,\r\n                createAt\r\n            })\r\n        } catch (err)  {\r\n            console.log(\"failed to create \" + err.message);\r\n        }\r\n    }\r\n    return ref;\r\n}\r\n\r\nexport async function checkUserExistsByMail(email) {\r\n    try {\r\n        const snapshot = await firestore\r\n            .collection(\"users\")\r\n            .where(\"email\", \"==\", email)\r\n            .get();\r\n        return snapshot.size === 1;\r\n    } catch (err) {\r\n        console.log(\"failed to get \" +err.message);\r\n        return true;\r\n    }\r\n}\r\n\r\nexport async function updateUserDetails(userDetails) {\r\n    console.log(userDetails);\r\n    try {\r\n        await firestore\r\n            .doc(`users/${userDetails.id}`)\r\n            .set(userDetails);\r\n    } catch (err) {\r\n        console.log(\"failed to update \"+err.message);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./account-section.styles.scss\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {currentUserSelector} from \"../../../redux/user/user-selector\";\r\nimport {auth} from \"../../../util/firebase\";\r\n\r\nfunction AccountSection({history, currentUser}) {\r\n    const signOut = async () => {\r\n        await auth.signOut();\r\n    };\r\n    const navigateToAccount = () => {\r\n        history.push(\"/account\");\r\n    };\r\n    const navigateToRegister = () => {\r\n        history.push(\"/account/register\");\r\n    };\r\n    return (\r\n        <div className=\"account-section-component\">\r\n            {currentUser ?\r\n                <div>\r\n                    <div className=\"button-section\">\r\n                        <button  className=\"register-button\"\r\n                                 onClick={navigateToAccount}>\r\n                            Account\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"button-section\">\r\n                        <button  className=\"login-button\"\r\n                                 onClick={signOut}>\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </div> :\r\n                <div>\r\n                    <div className=\"button-section\">\r\n                        <button  className=\"register-button\"\r\n                                 onClick={navigateToRegister}>\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"button-section\">\r\n                        <button className=\"login-button\"\r\n                                onClick={navigateToAccount}>\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: currentUserSelector\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(AccountSection));\r\n","import React from \"react\";\r\nimport \"./header.styles.scss\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport AccountSection from \"../account-section/account-section.component\";\r\n\r\nfunction Header({history}){\r\n    return (\r\n        <div className=\"header-component\">\r\n            <div className=\"logo\" onClick={() => history.push(\"/\")}>\r\n                Play Now\r\n            </div>\r\n            <div className=\"right-section\">\r\n                <AccountSection />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","export function appendLine(text, textToAppend) {\r\n    return text + textToAppend + \"\\n\";\r\n}\r\n\r\nexport function setTitle(toAppend) {\r\n    document.title =\r\n        toAppend ?\r\n            toAppend + \" | Play Now\" :\r\n            \"Play Now\";\r\n}\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport \"./home.styles.scss\";\r\nimport {setTitle} from \"../../../util/utils\";\r\n\r\nexport default function Home() {\r\n    useEffect(() => {\r\n        setTitle(\"\");\r\n    });\r\n    return (\r\n        <div className=\"home-page\">\r\n            HOME\r\n        </div>\r\n    )\r\n}","const data = [\r\n    {\r\n        code: \"kids\",\r\n        displayName: 'Kids',\r\n        imageUrl: 'https://i.ibb.co/bQt4Bbk/kids.jpg'\r\n    },\r\n    {\r\n        code: \"card\",\r\n        displayName: \"Card\",\r\n        imageUrl: 'https://i.ibb.co/7j3rZyp/card.jpg'\r\n    },\r\n    {\r\n        code: \"fighting\",\r\n        displayName: \"Fighting\",\r\n        imageUrl: 'https://i.ibb.co/2KVXBf5/fighting.jpg'\r\n    },\r\n    {\r\n        code: \"funny\",\r\n        displayName: \"Funny\",\r\n        imageUrl: 'https://i.ibb.co/883QR9P/funny.jpg'\r\n    },\r\n    {\r\n        code: \"puzzle\",\r\n        displayName: \"Puzzle\",\r\n        imageUrl: 'https://i.ibb.co/stfNhJX/puzzle.jpg'\r\n    },\r\n    {\r\n        code: \"racing\",\r\n        displayName: \"Racing\",\r\n        imageUrl: 'https://i.ibb.co/NshGhz5/racing.jpg'\r\n    },\r\n    {\r\n        code: \"shooting\",\r\n        displayName: \"Shooting\",\r\n        imageUrl: 'https://i.ibb.co/6XV9Spw/shooting.jpg'\r\n    },\r\n    {\r\n        code: \"arcade\",\r\n        displayName: \"Arcade\",\r\n        imageUrl: 'https://i.ibb.co/BVYDjzL/arcade.png'\r\n    },\r\n    {\r\n        code: \"political\",\r\n        displayName: \"Political\",\r\n        imageUrl: 'https://i.ibb.co/xfgJYp9/political.jpg'\r\n    },\r\n];\r\n\r\nexport default data;","import React from \"react\";\r\nimport \"./category-item.styles.scss\";\r\n\r\nexport default function CategoryItem({category, itemSize}) {\r\n    return (\r\n        <div className=\"category-item-component\" style={{width: `${itemSize-25}px`}}>\r\n            <img src={category.imageUrl} alt=\"category display\" />\r\n            <div className=\"name\">{category.displayName}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./categories-stripe.styles.scss\";\r\nimport categories from \"../../data/categories\";\r\nimport CategoryItem from \"../category-item/category-item.component\";\r\n\r\nconst ITEM_SIZE = 300;\r\n\r\nfunction calculatePageSize() {\r\n    return Math.round((window.innerWidth - 100) / ITEM_SIZE)+1;\r\n}\r\n\r\nexport default class CategoriesStripe extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startIndex: 0,\r\n            pageSize: calculatePageSize()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateDimensions);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateDimensions);\r\n    }\r\n\r\n    updateDimensions = () => {\r\n        this.setState({pageSize: calculatePageSize()});\r\n    };\r\n\r\n    increaseStartIndex = () => {\r\n        this.setState(prevState => ({startIndex: prevState.startIndex + 1}));\r\n    };\r\n\r\n    decreaseStartIndex = () => {\r\n        this.setState(prevState => ({startIndex: prevState.startIndex - 1}));\r\n    };\r\n\r\n    render() {\r\n        const endIndex = this.state.startIndex + this.state.pageSize;\r\n        return (\r\n            <div className=\"categories-stripe-component\">\r\n                <div className=\"categories-container\"\r\n                     style={{\r\n                        transform: `translate3d(-${this.state.startIndex * ITEM_SIZE}px, 0px, 0px)`,\r\n                        transition: `all 0.25s ease 0s`,\r\n                    }}>\r\n                    {categories.map(category => {\r\n                        return (\r\n                            <CategoryItem key={category.code}\r\n                                          category={category} itemSize={ITEM_SIZE - 25} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                {this.state.startIndex > 0 &&\r\n                    <div className=\"category-arrow left\" onClick={this.decreaseStartIndex}>\r\n                        <div className=\"inner\">&laquo;</div>\r\n                    </div>\r\n                }\r\n                {endIndex !== categories.length &&\r\n                    <div className=\"category-arrow right\" onClick={this.increaseStartIndex}>\r\n                        <div className=\"inner\">&raquo;</div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {appendLine} from \"../../util/utils\";\r\n\r\nlet text =\"\";\r\ntext = appendLine(text,\"# About Play Now\");\r\ntext = appendLine(text,\"Play now is a platform for online games\");\r\ntext = appendLine(text,\"\");\r\ntext = appendLine(text,\"It will show you always the most updated and cool games in the market, as well as nostalgic games\");\r\n\r\nexport default text;\r\n","import React, {useEffect} from \"react\";\r\nimport \"./about.styles.scss\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport aboutContent from \"../../../assets/txt/about.MD.js\";\r\nimport {setTitle} from \"../../../util/utils\";\r\n\r\nexport default function About() {\r\n    useEffect(() => {\r\n        setTitle(\"About\");\r\n    });\r\n    return (\r\n        <div className=\"about-component\">\r\n            <ReactMarkdown source={aboutContent} />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./custom-button.styles.scss\";\r\n\r\nexport default function CustomButton({children, isSignInWithGoogle, inverted, ...otherProps})\r\n{\r\n    return (\r\n        <button className={`\r\n                        ${inverted ? 'inverted' : ''} \r\n                        ${isSignInWithGoogle ? 'sign-in-with-google' : ''} \r\n                        custom-button-component\r\n                        `}\r\n                {...otherProps}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n","export function objectNotEmpty(object) {\r\n    let result = false;\r\n    Object.keys(object).forEach((key) => {\r\n        if (object[key]) {\r\n            result = true;\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\nexport function stringEmpty(string) {\r\n    return !string || string === \"\";\r\n}\r\n\r\nexport function stringNotEmpty(string) {\r\n    return string && string !== \"\";\r\n}\r\n\r\nexport function eitherStringIsEmpty(strings) {\r\n    let isEmpty = false;\r\n    strings.forEach(string => {\r\n        if(stringEmpty(string)) {\r\n            isEmpty = true;\r\n        }\r\n    })\r\n    return isEmpty;\r\n}","import React, {Component} from \"react\";\r\nimport \"./form-input.styles.scss\";\r\nimport viewIcon from \"../../../assets/view.png\";\r\nimport hideIcon from \"../../../assets/hide.png\";\r\nimport {validateEmail, validatePassword} from \"../../../util/validators\";\r\nimport {stringNotEmpty} from \"../../../util/objectUtils\";\r\n\r\nexport const INPUT_TYPES = {\r\n    PASSWORD: \"password\",\r\n    EMAIL: \"email\"\r\n};\r\n\r\nexport default class FormInput extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            passwordHidden: true,\r\n            internalValidationMessage: null,\r\n            value: null\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const {name, forceValidate} = this.props;\r\n        const {value} = this.state;\r\n        if(forceValidate) {\r\n            const isValid = this.validate(value);\r\n            this.props.handleChange(name, value, isValid);\r\n        }\r\n    }\r\n\r\n    showPassword = () => {\r\n        this.setState({passwordHidden: false});\r\n    };\r\n    hidePassword = () => {\r\n        this.setState({passwordHidden: true});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        const isValid = this.validate(value);\r\n        this.props.handleChange(name, value, isValid);\r\n        this.setState({value: value});\r\n    };\r\n\r\n    validate = (value) => {\r\n        const {required, label, type} = this.props;\r\n        let internalValidationMessage = null;\r\n        if(required && !stringNotEmpty(value)) {\r\n            internalValidationMessage = `${label} is required`;\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case INPUT_TYPES.PASSWORD: {\r\n                    const validationResult = validatePassword(value);\r\n                    internalValidationMessage = !validationResult && \"password should contain 6-8 ABC/abc characters\";\r\n                } break;\r\n                case INPUT_TYPES.EMAIL: {\r\n                    const validationResult = validateEmail(value);\r\n                    internalValidationMessage = !validationResult && \"invalid email\";\r\n                } break;\r\n                default: break;\r\n            }\r\n        }\r\n        this.setState({internalValidationMessage: internalValidationMessage});\r\n        return (typeof internalValidationMessage !== \"undefined\");\r\n    };\r\n\r\n    render() {\r\n        const {type, validationMessage} = this.props;\r\n        const {passwordHidden, internalValidationMessage} = this.state;\r\n        const otherProps = {...this.props};\r\n        const message = internalValidationMessage || validationMessage;\r\n        delete otherProps.type;\r\n        delete otherProps.handleChange;\r\n        delete otherProps.validationMessage;\r\n        delete otherProps.forceValidate;\r\n        const inputType = type === INPUT_TYPES.PASSWORD && this.state.passwordHidden ?\r\n            \"password\" : \"text\";\r\n        const inputClassName =\r\n            `\r\n            ${type} \r\n            ${passwordHidden ? \"hidden\":\"\"} \r\n            ${message ? \"invalid\":\"\"} \r\n            form-input`;\r\n        return (\r\n            <div className=\"form-input-group-component\">\r\n                <div className=\"title\">\r\n                    <div>{this.props.label}</div>\r\n                    {this.props.required &&\r\n                        <div>\r\n                            &nbsp;<span className=\"mandatory\">*</span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <input  className={inputClassName}\r\n                            type={inputType}\r\n                            onChange={this.handleChange} {...otherProps}\r\n                            autoComplete=\"current-password\"\r\n                    />\r\n                    {type === INPUT_TYPES.PASSWORD &&\r\n                        <span>\r\n                            &nbsp;&nbsp;\r\n                            {this.state.passwordHidden ?\r\n                                <img src={hideIcon} alt=\"\" width=\"25\" height=\"25\" onClick={this.showPassword}/>\r\n                                :\r\n                                <img src={viewIcon} alt=\"\" width=\"25\" height=\"25\" onClick={this.hidePassword}/>\r\n                            }\r\n                        </span>\r\n\r\n                    }\r\n                </div>\r\n                {message &&\r\n                    <div className=\"notification\">\r\n                        {message}\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nexport function validateEmail(mail) {\r\n    const expression = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return expression.test(mail);\r\n}\r\n\r\nexport function validatePassword(password) {\r\n    const expression = /([a-zA-Z]{6,8})$/;\r\n    return expression.test(password);\r\n}\r\n","import React from \"react\";\r\nimport \"./text-area.styles.scss\";\r\n\r\nexport default function TextAreaInput({handleChange, label, required, ...otherProps}) {\r\n    return (\r\n        <div className=\"form-area-group-component\">\r\n            <div className=\"title\">\r\n                {label}\r\n                {required &&\r\n                    <span>\r\n                        &nbsp;<span className=\"mandatory\">*</span>\r\n                    </span>\r\n                }\r\n            </div>\r\n            <textarea   className=\"form-area\"\r\n                        {...otherProps}\r\n                        onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./contact.styles.scss\";\r\nimport CustomButton from \"../../common/custom-button/custom-button.component\";\r\nimport {setTitle} from \"../../../util/utils\";\r\nimport FormInput from \"../../common/form-input/form-input.component\";\r\nimport TextAreaInput from \"../../common/text-area/text-area.component\";\r\n\r\nexport default class Contact extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            from_email: \"\",\r\n            html_message: \"\"\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        setTitle(\"Contact\");\r\n    }\r\n    setField = (event) => {\r\n        const {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    sendEmail = (event) => {\r\n        event.preventDefault();\r\n        // TODO - not working //\r\n        console.log(this.state);\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                to: this.state.from_email,\r\n                message: this.state.html_message\r\n            })\r\n        };\r\n        console.log(\"options\");\r\n        console.log(options);\r\n        const url = \"http://localhost:5600/sendContactEmail\";\r\n        fetch(url, options);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"contact-component\">\r\n                <form onSubmit={this.sendEmail}>\r\n                    <h1>Contact Us</h1>\r\n                    <FormInput\r\n                        label=\"Email\"\r\n                        required\r\n                        value={this.state.from_email}\r\n                        type=\"text\"\r\n                        size=\"100\"\r\n                        name=\"from_email\"\r\n                        handleChange={this.setField}\r\n                    />\r\n                    <TextAreaInput\r\n                        label=\"Message\"\r\n                        required\r\n                        value={this.state.html_message}\r\n                        rows=\"4\" cols=\"100\"\r\n                        name=\"html_message\"\r\n                        handleChange={this.setField}\r\n                    />\r\n                    <div className=\"submit\">\r\n                        <CustomButton onClick={this.onSubmit}>Submit</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./info.styles.scss\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport About from \"../../info/about/about.component\";\r\nimport Contact from \"../../info/contact/contact.component\";\r\n\r\nexport default function Info({match}) {\r\n    return (\r\n        <div className=\"info-page\">\r\n            <Switch>\r\n                <Route exact path={match.path + \"/about\"} component={About} />\r\n                <Route exact path={match.path + \"/contact\"} component={Contact} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./footer.styles.scss\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Footer() {\r\n    const year = new Date().getFullYear();\r\n    return (\r\n        <div className=\"footer-component\">\r\n            <div className=\"copyright\">@Copyright&nbsp;&nbsp;{year}&nbsp;&nbsp;Karen Samoila</div>\r\n            <div className=\"links\">\r\n                <Link to=\"/info/about\">About</Link>\r\n                <div className=\"space\">|</div>\r\n                <Link to=\"/info/contact\">Contact Us</Link>\r\n                <div className=\"space\">|</div>\r\n                <Link to=\"/info/terms\">Terms Of Use</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default {\r\n    SET_CURRENT_USER: \"SET_CURRENT_USER\"\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./login.styles.scss\";\r\nimport FormInput, {INPUT_TYPES} from \"../../common/form-input/form-input.component\";\r\nimport CustomButton from \"../../common/custom-button/custom-button.component\";\r\nimport {auth, signInWithGoogle} from \"../../../util/firebase\";\r\nimport {setTitle} from \"../../../util/utils\";\r\nimport {eitherStringIsEmpty, objectNotEmpty, stringNotEmpty} from \"../../../util/objectUtils\";\r\n\r\nexport default class Login extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            invalidValues: {},\r\n            forceValidate: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        setTitle(\"Login\");\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.state.forceValidate){\r\n            this.setState({forceValidate: false});\r\n        }\r\n    }\r\n\r\n    handleChange = (name, value, isValid) => {\r\n        const invalidValues = {...this.state.invalidValues};\r\n        invalidValues[name] = !isValid;\r\n        this.setState({[name]: value, invalidValues: invalidValues});\r\n    };\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const {email, password, invalidValues} = this.state;\r\n        if(objectNotEmpty(invalidValues)){\r\n            return;\r\n        }\r\n        if(eitherStringIsEmpty([email, password])){\r\n            this.setState({forceValidate: true});\r\n            return;\r\n        }\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n        } catch (err) {\r\n            if(err.message.includes(\"no user record\") || err.message.includes(\"The password is invalid\")) {\r\n                alert(\"email or password is wrong\");\r\n            }\r\n        }\r\n    };\r\n    render() {\r\n        const {email, password, forceValidate} = this.state;\r\n        return (\r\n            <div className=\"login-component\">\r\n                <div className=\"login-component-container\">\r\n                    <form>\r\n                        <FormInput\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            type={INPUT_TYPES.EMAIL}\r\n                            required\r\n                            handleChange={this.handleChange}\r\n                            value={email}\r\n                            forceValidate={forceValidate}\r\n                        />\r\n                        <FormInput\r\n                            name=\"password\"\r\n                            type={INPUT_TYPES.PASSWORD}\r\n                            label=\"Password\"\r\n                            required\r\n                            handleChange={this.handleChange}\r\n                            value={password}\r\n                            forceValidate={forceValidate}\r\n                        />\r\n                        <div className=\"buttons\">\r\n                            <CustomButton onClick={this.handleSubmit}>\r\n                                Login\r\n                            </CustomButton>\r\n                            <CustomButton\r\n                                isSignInWithGoogle\r\n                                inverted\r\n                                onClick={signInWithGoogle}>\r\n                                Login With Gmail\r\n                            </CustomButton>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./password-confirm-input.styles.scss\";\r\nimport FormInput, {INPUT_TYPES} from \"../form-input/form-input.component\";\r\n\r\nexport default class PasswordConfirm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: \"\",\r\n            confPassword: \"\",\r\n            validationMessage: null\r\n        };\r\n    }\r\n    passwordAndConfPassword = (value, isConfPassword) => {\r\n        const {confPassword, password} = this.state;\r\n        const passwordUpdated = isConfPassword ? password : value;\r\n        const confPasswordUpdated = isConfPassword ? value : confPassword;\r\n        return passwordUpdated === confPasswordUpdated;\r\n    };\r\n    handleChange = (name, value, isValid) => {\r\n        let validationMessage = null;\r\n        if(isValid && !this.passwordAndConfPassword(value, name === \"confPassword\")) {\r\n            validationMessage = \"password does not match\";\r\n        }\r\n        this.setState({[name]: value, validationMessage: validationMessage});\r\n        this.props.handleChange(this.props.name, value, isValid && !validationMessage);\r\n    };\r\n    render() {\r\n        const {password, confPassword, validationMessage} = this.state;\r\n        const {forceValidate, required} = this.props;\r\n        return (\r\n            <div className=\"password-confirm-input-component\">\r\n                <FormInput\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type={INPUT_TYPES.PASSWORD}\r\n                    required={required}\r\n                    handleChange={this.handleChange}\r\n                    value={password}\r\n                    validationMessage={validationMessage}\r\n                    forceValidate={forceValidate}\r\n                />\r\n                <FormInput\r\n                    name=\"confPassword\"\r\n                    label=\"Confirm Password\"\r\n                    type={INPUT_TYPES.PASSWORD}\r\n                    required={required}\r\n                    handleChange={this.handleChange}\r\n                    value={confPassword}\r\n                    validationMessage={validationMessage}\r\n                    forceValidate={forceValidate}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./register.styles.scss\";\r\nimport FormInput, {INPUT_TYPES} from \"../../common/form-input/form-input.component\";\r\nimport {auth, checkUserExistsByMail, createUserProfileDocument} from \"../../../util/firebase\";\r\nimport {setTitle} from \"../../../util/utils\";\r\nimport PasswordConfirm from \"../../common/password-confirm/password-confirm-input.component\";\r\nimport CustomButton from \"../../common/custom-button/custom-button.component\";\r\nimport {eitherStringIsEmpty, objectNotEmpty} from \"../../../util/objectUtils\";\r\n\r\nexport default class Register extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            confPassword: \"\",\r\n            invalidValues: {},\r\n            emailValidationMessage: null,\r\n            forceValidate: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        setTitle(\"Register\");\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.state.forceValidate){\r\n            this.setState({forceValidate: false});\r\n        }\r\n    }\r\n\r\n    handleChange = (name, value, isValid) => {\r\n        const invalidValues = {...this.state.invalidValues};\r\n        invalidValues[name] = !isValid;\r\n        let emailValidationMessage = this.state.emailValidationMessage;\r\n        if(name === INPUT_TYPES.EMAIL) {\r\n            emailValidationMessage = null;\r\n        }\r\n        this.setState({[name]: value, invalidValues: invalidValues, emailValidationMessage: emailValidationMessage});\r\n    };\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const {email, password, invalidValues} = this.state;\r\n        if(objectNotEmpty(invalidValues)){\r\n            return;\r\n        }\r\n        if(eitherStringIsEmpty([email, password])){\r\n            this.setState({forceValidate: true});\r\n            return;\r\n        }\r\n        const emailExists = await checkUserExistsByMail(email);\r\n        if(emailExists) {\r\n            this.setState({emailValidationMessage: \"email already exists\"});\r\n            return;\r\n        }\r\n        try {\r\n            const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n            const userData = {uid: user.uid, email: user.email, displayName: \"User\"};\r\n            await createUserProfileDocument(userData);\r\n        } catch (err) {\r\n            console.log(\"could not sign in \"+err.message);\r\n        }\r\n    };\r\n    render() {\r\n        const {email, emailValidationMessage, forceValidate} = this.state;\r\n        return (\r\n            <div className=\"register-component\">\r\n                <form>\r\n                    <FormInput\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        type={INPUT_TYPES.EMAIL}\r\n                        required\r\n                        handleChange={this.handleChange}\r\n                        value={email}\r\n                        validationMessage={emailValidationMessage}\r\n                        forceValidate={forceValidate}\r\n                    />\r\n                    <PasswordConfirm\r\n                        name=\"password\"\r\n                        required\r\n                        handleChange={this.handleChange}\r\n                        forceValidate={forceValidate}\r\n                    />\r\n                    <div className=\"buttons\">\r\n                        <CustomButton onClick={this.handleSubmit}>\r\n                            Create\r\n                        </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./account-details.styles.scss\";\r\nimport {connect} from \"react-redux\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {currentUserSelector} from \"../../../redux/user/user-selector\";\r\nimport dateFormat from \"dateformat\";\r\nimport FormInput from \"../../common/form-input/form-input.component\";\r\nimport {setTitle} from \"../../../util/utils\";\r\nimport CustomButton from \"../../common/custom-button/custom-button.component\";\r\nimport {updateUserDetails} from \"../../../util/firebase\";\r\nimport {objectNotEmpty} from \"../../../util/objectUtils\";\r\nimport PasswordConfirm from \"../../common/password-confirm/password-confirm-input.component\";\r\n\r\nclass AccountDetails extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayName: this.props.currentUser.displayName,\r\n            password: \"\",\r\n            invalidValues: {}\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        setTitle(\"My Account\");\r\n    }\r\n    handleChange = (name, value, isValid) => {\r\n        const invalidValues = {...this.state.invalidValues};\r\n        invalidValues[name] = !isValid;\r\n        this.setState({[name]: value});\r\n    };\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const {displayName, invalidValues} = this.state;\r\n        if(objectNotEmpty(invalidValues)){\r\n            return;\r\n        }\r\n        try {\r\n            await updateUserDetails({\r\n                ...this.props.currentUser,\r\n                displayName: displayName,\r\n            })\r\n        } catch (err) {\r\n            console.log(\"failed to update \"+err.message);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {currentUser} = this.props;\r\n        const {displayName} = this.state;\r\n        const presentationDate = new Date(currentUser.createAt.seconds * 1000);\r\n        const userCreationDate = dateFormat(presentationDate, \"dd-mm-yyyy hh:MM:ss\");\r\n        return (\r\n            <div className=\"account-details-component\">\r\n                <div className=\"content\">\r\n                    <div className=\"basic-details\">\r\n                        <span className=\"title\">Email :</span>&nbsp;\r\n                        <span className=\"value\">{currentUser.email}</span>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <span className=\"title\">Member since :</span>&nbsp;\r\n                        <span className=\"value\">{userCreationDate}</span>\r\n                    </div>\r\n                    <div className=\"const-details\">\r\n                        <div className=\"side-section\">\r\n                            <FormInput\r\n                                name=\"displayName\"\r\n                                label=\"Display Name\"\r\n                                required\r\n                                handleChange={this.handleChange}\r\n                                value={displayName}\r\n                            />\r\n                        </div>\r\n                        <div className=\"side-section\">\r\n                            <PasswordConfirm\r\n                                name=\"password\"\r\n                                \r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <CustomButton onClick={this.handleSubmit}>\r\n                            Submit\r\n                        </CustomButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: currentUserSelector\r\n});\r\n\r\nexport default connect(mapStateToProps)(AccountDetails);\r\n","import React from \"react\";\r\nimport \"./account.styles.scss\";\r\nimport Login from \"../../account/login/login.component\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport {currentUserSelector} from \"../../../redux/user/user-selector\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport Register from \"../../account/register/register.component\";\r\nimport AccountDetails from \"../../account/account-details/account-details.component\";\r\n\r\nfunction AccountManagement({match, currentUser}) {\r\n    return (\r\n        <div className=\"account-page\">\r\n            <Switch>\r\n                <Route     exact path={`${match.path}/register`}\r\n                           render={() => currentUser ?\r\n                               <Redirect to=\"/\" /> : <Register />}\r\n                />\r\n                <Route     exact path={`${match.path}`}\r\n                           render={() => currentUser ?\r\n                               <AccountDetails /> : <Login />}\r\n                />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: currentUserSelector\r\n});\r\n\r\nexport default connect(mapStateToProps)(AccountManagement);\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Header from \"./layout/header/header.component\";\nimport {Switch, Route} from \"react-router-dom\";\nimport Home from \"./pages/home/home.component\";\nimport CategoriesStripe from \"./categories-stripe/categories-stripe.component\";\nimport Info from \"./pages/info/info.component\";\nimport Footer from \"./layout/footer/footer.component\";\nimport {auth, createUserProfileDocument} from \"../util/firebase\";\nimport {removeCurrentUser, setCurrentUser} from \"../redux/user/user-actions\";\nimport {connect} from \"react-redux\";\nimport AccountManagement from \"./pages/account/account.component\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.unsubscribeFromAuth = auth.onAuthStateChanged( async user => {\n            if(user) {\n                const userRef = await createUserProfileDocument(user);\n                userRef.onSnapshot(snapshot => {\n                    this.props.setCurrentUser({\n                        id: snapshot.id,\n                        ...snapshot.data()\n                    })\n                });\n            } else {\n                this.props.removeCurrentUser();\n            }\n        })\n    }\n\n    render()\n    {\n        return (\n            <div className=\"App\">\n                <Header/>\n                <CategoriesStripe/>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/info\" component={Info} />\n                    <Route path=\"/account\" component={AccountManagement} />\n                </Switch>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n    removeCurrentUser: () => dispatch(removeCurrentUser())\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import types from \"./user-types\";\r\n\r\nexport const setCurrentUser = (user) => ({\r\n    type: types.SET_CURRENT_USER,\r\n    payload: user\r\n});\r\n\r\nexport const removeCurrentUser = () => ({\r\n    type: types.SET_CURRENT_USER,\r\n    payload: null\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import types from \"./user-types\";\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import {combineReducers} from \"redux\";\r\nimport userNs from \"./user/user-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    userNs\r\n});\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport {logger} from \"redux-logger/src\";\r\nimport {persistStore} from \"redux-persist\";\r\n\r\nconst middlewares = [];\r\n\r\nif(process.env.NODE_ENV === \"development\") {\r\n    middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {store, persistor};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store, persistor} from \"./redux/store\";\nimport {PersistGate} from \"redux-persist/integration/react\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App />\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/view.2d785e0d.png\";","module.exports = __webpack_public_path__ + \"static/media/hide.891c6568.png\";"],"sourceRoot":""}